name: Build and Deploy Mpos-api

trigger:
  branches:
    include:
      - master

pool:
  vmImage: 'ubuntu-latest'

variables:
  Image_Name: 'olopoimages/mpos-api'
  Tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build and Push Docker Image
  jobs:
  - job: Build
    displayName: Build Docker Image
    steps:
    - script: |
        echo "Building Docker image: $(Image_Name):$(Tag)"

        docker build -t $(Image_Name):$(Tag) -f ./Dockerfile . > /dev/null 2>&1

        echo "Logging in to Docker Hub"
        echo $(DOCKERHUB_PASSWORD) | docker login -u $(DOCKERHUB_USERNAME) --password-stdin

        echo "Pushing Docker image to Docker Hub"
        docker push $(Image_Name):$(Tag) > /dev/null 2>&1
        echo "Docker images pushed successfully"
      displayName: 'Push Docker image to registry mpos-api'
      env:
        DOCKERHUB_USERNAME: $(DOCKERHUB_USERNAME)
        DOCKERHUB_PASSWORD: $(DOCKERHUB_PASSWORD)

- stage: Deploy
  displayName: Deploy the Latest Build
  jobs:
  - job: Deploy
    displayName: Deploy to EC2 Instance
    steps:
      - task: SSH@0
        inputs:
          sshEndpoint: 'ec2-instance'
          runOptions: 'commands'
          commands: |
            rm /mpos-api/.env
            echo "IMAGE_TAG=$(Build.BuildId)" > /mpos-api/.env
            cat /mpos-api/.env.example >> /mpos-api/.env
            sh /mpos-api/script.sh
          readyTimeout: '20000'
